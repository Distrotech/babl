
Babl @BABL_VERSION@

    Dynamic; any to any, pixel format conversion library.

-----------------------------------------------------------------------


General Information
===================

This is babl version @BABL_VERSION@, babl is a pixel format conversion
library the provides conversions to and from any formats.

The official web site is:
    http://pippin.gimp.org/babl/


Installation
============

See the file 'INSTALL'


Current features
================

Bootstrapping with a reference conversions (to be used later for
regression tests during development of optimized versions.)

Data types (using "double" as common translation type): 

        "u8"       unsigned 8bit 
        "u16"      unsigned 16bit
        "float"    32bit floating point
        "double"   64bit floating point

Color models (using "rgba" as common translation type):

        "rgb"      color
        "rgba"     color+alpha
        "rgbA"     color with premultiplied alpha
        "srgb"     Gamma corrected "rgb"
        "srgba"    Gamma corrected "rgb" with linear alpha
        "g"        grayscale
        "ga"       grayscale+alpha
        "gA"       grayscale with premultiplied alpha
        "ycbcr"    Luminance and chrominances (common in video world)
        "ycbcra"   Luminance chromninances and alpha.

Sampling factors:

        (1,1)      Full sampling
        (2,1)      Half horizontal sampling
        (2,1)      Quartersize horizontal sampling
        (1,2)      Half vertical sampling
        (2,2)      Half resolution sampling
        (4,4)      Quartersize sampling

        The sampling factors can be used to implement chroma subsampling:

        YCbCr      Y     Cb    Cr
        --------+-------------------
        4:4:4      (1,1) (1,1) (1,1)
        4:2:2      (1,1) (2,1) (2,1)
        4:1:1      (1,1) (4,1) (4,1)
        4:2:0      (1,1) (2,2) (2,2)
       
Pixel Formats:

        (Any format allowed by the models and types can be specified,
         the following are named for easy reference.)

        "srgb"          8bit gamma corrected image with linear alpha
        "srgba"         used for instance for PNG files.
        
        "rgb_float"     Floating point buffer, good choice for
        "rgba_float"    prototyping image processing code before
                        optimizing using other pixel formats.
        
        "lab_float"     A representation useful for calculations that
        "laba_float"    prefers to work in a perceptually uniform color
                        space (note that lab is not perceptually
                        uniform, but closer than most others, /CIE lab/
                        is used extensively in color science, and many
                        approaches to color difference are based in
                        this color model.)

        "yuv420"        Video based format, often used with codecs for
                        instance communicating with libavcodec from the
                        ffmpeg project.

        "cmyk_float"    A floating point cmyk buffer based directly on
        "cmyka_float"   linear RGB.

                         cyan    =  (1.0-r) - min(1.0-r, 1.0-g, 1.0-b)
                         yellow  =  (1.0-r) - min(1.0-r, 1.0-g, 1.0-b)
                         magenta =  (1.0-r) - min(1.0-r, 1.0-g, 1.0-b)


Introspection
=============

Dumpig of the babl's internal state for debugging purposes.


Sanity checking
===============

Babl will complain verbosely if any of the registered data types or
color models do not have sufficient reference conversions to be
regression tested properly.


Planned features
================

- Regression testing against double based reference implementation for
  development of optimized conversions.

- Dynamically loaded modules with additional color models, data types,
  pixel formats and conversions.

- Compile time, and maybe runtime, profiling of conversions.

- Conversion auto builder (BablFish) capable of finding the fastest path
  through the set of registered conversions to perform a specified
  conversion without precision loss.


